# -*- coding: utf-8 -*-
"""EDA on red wine data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mQ6jgMKEyeTOLNMp19rvCh3hdbOhBQ8v
"""

import pandas as pd
import numpy as np

red_wine_data = pd.read_csv("https://raw.githubusercontent.com/dphi-official/Datasets/master/Wine_Dataset/winequality-red.csv", sep =";")
#sep is used to separate the data

red_wine_data

red_wine_data.head()
#gives the first 5 observations of the data

red_wine_data.tail()
#gives the last 5 observations of the data

red_wine_data.shape
#shows the shape of the data, that is, 1599 rows and 12 columns

red_wine_data.describe()
#shows a description of the data

red_wine_data.columns
#gives names of all columns in the data

red_wine_data['quality'].unique()
#unique function displays the unique values in the quality column

red_wine_data['quality']

red_wine_data['quality'].value_counts()
#value_count function counts the number of occurrences of each value in the quality column

red_wine_data.rename(columns={'fixed acidity' :'fixed_acidity','volatile acidity':'volatile_acidity', 'citric acid':'citric_acid', 'residual sugar':'residual_sugar','free sulfur dioxide':'free_sulphur_dioxide', 'total sulfur dioxide':'total_sulfur_dioxide'},
      inplace = True)
#rename() function is used to rename columns. We are renaming columns with spaces in their names
#inplace = True makes changes in the dataframe itself

red_wine_data.isna()
#detects missing values

red_wine_data.isna().any()

red_wine_data.isna().sum()
#isna().sum() displays the no.of missing values in each

red_wine_data.info()
#concise summary about the dataset.
#info() function returns information about the data frame including the data types of each column, number of null values in each column and memory usage of the entire data.

duplicate_entries = red_wine_data[red_wine_data.duplicated()]
duplicate_entries.shape
#checks for duplicates in the data

#importing data vizualization libraries
import matplotlib.pyplot as plt
import seaborn as sns

y = red_wine_data.quality #sets 'quality' as target variable y
x = red_wine_data.drop('quality', axis = 1) #drops the 'quality' column and all the other columns are input variables

red_wine_data.hist(bins=10, figsize=(15, 11))
plt.show()
#bins is the class interval and figsize is the figuresize you want

red_wine_data.corr()
#displays the correlation of each variable

plt.figure(figsize = (15, 11))
sns.heatmap(red_wine_data.corr(), cmap = 'bwr', annot = True)
#cmap specifies the color theme of the heatmap. 'annot=true' displays the correlational values in the graph. only colored blocks would have beeen displayed otherwise

plt.figure(figsize = (12, 8))
sns.countplot(red_wine_data.quality)

sns.pairplot(red_wine_data)
#pairplot builds on two basic figures, the histogram and the scatter plot.

sns.boxplot(x=red_wine_data.quality, y=red_wine_data.alcohol, palette= 'GnBu_d')
plt.title("Boxplot of Quality and Alcohol")
plt.show()